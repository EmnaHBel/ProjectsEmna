%!PS-Adobe-3.0 EPSF-3.0
%%Title: (eff_heur_figs.dvi)
%%Version: 1 4
%%Creator: (dvips\(k\) 5.90a Copyright 2002 Radical Eye Software)
%%CreationDate: (D:20030115084918+01'00')
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 151 509 431 757
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
151 509 moveto 431 509 lineto 431 757 lineto 151 757 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: l2check
%%Copyright: Copyright 1993 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdflev2
%%Version: 5.0 15
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 2
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[userdict /pdf_svglb currentglobal put true setglobal
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end

userdict /pdf_svglb get setglobal
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
151 509 280 248 rectclip
%%BeginResource: font KHTGTN+CMR10
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 13 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/FullName (CMR10) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /KHTGTN+CMR10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -251 -250 1009 969 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81C6325A8F1E39454C5C5CD7DD32FFDCAA0C98A471D
864F21BA3C1B9AB1A487DF489FCED13A759AC6D527220B09E5C662269D43162B
1C47D4A5CBFB0633655E0B882B6CB0B8386CBC5142ED5E3581051D6952C2D60E
CC016F88AA5C2C88A02AD3E7621E87AFA4B88E9149CBFC744342E35BF29B4E2D
48E22FB32FF8C291AD36157A0297D947D6968BAADE6D12889CFE94CA20EEB67D
929271B1BCD34B14DCBB9EACF17A4E9F396DD185CFCBA17A152CA58F58C95B2F
4FB0CDD5B374314B231A26B704ED77D5395B854D9B97B43B0D727A263EE297F2
AED166F14D1CBB97EC7E441479A8F6BE99D84152592851FF5088EAD2570A794B
2D0BB6BCFB14F2292CCCEC59EC34B406459FE308A2D7125990022F2D5FBC00D1
7E6986A964664221448BB7F2D9BB186CF6AC07EAEE7827BEB4B5FFAB09ADBEED
0A49248BC6AB4276956F1C2AE7E9030BE676CBF356671B09F21ED5C10115C7E0
385A4122A5A4761AB2D68E0E3E36EE81F1E9475254C73DC7A4E0E5BB5C894BFE
367524CFB49E685E4A511B289058FBB2768D9D1976C6564109DD061796D661F0
ACC44E650E571EEF5FA554A92582B1285FFFA5A6F53028AEAABDE5C8537FDC70
A0CF02FBC54CC9CCC75DCC7377FB52330426D6B48E2472777546D376971D8596
CA32CB4A847CC606612A725D63B467E8237E8E7F2E052236B8E1866A5C28ADD5
CBA08048CB8574B2B473C76B4A4CFAD9B84426AED50E469E619B975D617DF0D8
2A7729E38794F6C3E687F6970BCC6BF7DD42190C11869CE5E2183851DA6E01B5
84F6CE0658206C24296AAFE29E5FF742200F6BA92B023511A2AC02217156364D
B442B15BDD9EAAD731D2D2F175E55948E2302BAF89A60F0C7CE238B732882C43
6D40D2B1BF34559E22D91CBFABB6E1DBA3EA996FCCB89677107307A1816D54C3
7BCF826899317FC42B7289805812F87CF4972F6D405516012E9222E87CB82D64
F672B7ECBF33088AE3B410B46F30C5907E64FBDC643DAD1C8F4706A81E32FF98
9FAB6875DB2BA1593DDA882C4C957C2DA7198FC70394A1ED57CA4BC4983C90B0
EEE65D5BE36881504836A07C17CAC2CE2A4CDECA1D813CB686D82DB2456E43A9
72CA209E2F40FD52C1840C6ACB841759B23E160717C5CC75BC101B4F679B9A41
EEC379ED68B9F04BA3BB4FF71CC5F863306155F19F4663A1C00FAA761A7EC068
FFB85E9D65F9990D4275A3F34F3175509825D087B5CDF99264A7860DC2D8A079
43F8656E64E8E61C67ABE0C62BFA49B7A85DD1CA1E95AAC514A42B43DB042B4D
E76165644948DD3DDC0F984053646C7F31E848DD4C896452F0239A2269EF36D8
1D184D3F50C1E694BE6350D1AB75150CF93BB8F253EDF743F29429D7B2BD5376
4C1E30DA1B951216E92F7096CC981F1B366690A3C2CFE4D40F9FC15B13EC8B54
AF5B287E4345E15436E9A76D70AAA9D7F9E6B49A375D815A1DA741E0B004B383
3946EE0C28077936536596D91586ABD6A9A61B7D22D6093D7D0193AEE1B755DA
0B0A26BB1F2885E8E1F0225AE17F5BE452A806E798F2E1E69734EEB6173355A3
D729FBD9BF9DE76BCEBFB68644EB6FBCCF572AD290654ECEF53A1DB637B79B9B
94830FDE72065959EF6DE2268C8B2CE2ABFF32CBEC7F9B0A69BC79186346290E
7A860C1536ACE1C43C63272B24CEAFD9222CFE8FCC9E2BDD7D13334267B75C88
3F9094697166616239D51772A5CD3DE15956F8D4BF817739963CE47F80CA7051
5B8F702731E40483EFF9DA59F4A37EF5F4337F54FC850E2FD32CE739F7AAFD66
239CC89C4F334377FD85892BA1F3DE928E0FABFBE67132C0BB4C477DEEE0DE48
1FD193A7BDFF674D70775EB8EE8D839ACCAEACEA433CF369BC09854C44FD5EEA
D05C551C050BCED99D99FD084CD9350CBADE487301693C9BA0C281E44F69BC02
A6D2D8BF6B1DCF2984EED2A0D173C4FD86E807878C9E8593DB24C21102AF2A52
2F602689A21C8031425E1F6D1ECD13CDE1254DF20EA4595F4AAEF02A09E39EC0
AA82DFBCB3901EA4FEDD4486EAE8E8C3C85F922808E1FC148FE5D069C95CAA90
4B5E756A64056843EE56620453C86AE8AA70E74FC35F6B5836F10AFB103013F8
2000E72D935930FF4D770300C3BD4D65B6E40F1A7F167A65C844B3BA97143D34
598B7B44B43F3F91972B0D67B3FDD572E44EE6C9FFC972A4140E4774B2ABAC18
1E0BC035330959DC8596E30C61CD1CBEB586FDEE143B8B5175C861771CFE7596
7531CFB1ACD7AA93C495919CCC7B4AB4A79FA895F66882116C282573349A488F
7D2AD43F27B78CCE08532DADDC1D79170ADB85BD18D610DDD153CEEC3285AC65
6EFA07D9CF8CE269F37DB9DBB110AA1BFDBB6BDDDBF9753526F3750EE858944A
73A3335B1E28AF6E71198797392679747887F981B47E1D25A6308252BD7F2FD7
6EF5194015B69902F79DB259B6CF1201150B84F0CAAFEE413487E9F90CD84514
51BBB6BC6334178D4C8DD3969029C6C4CB02BFFCB6AB34500665AE34D811E214
BAEBCD8829513EC9C6F17B28A02B05D0A39E43D59D7F4045A5D27283B9EA467C
E4DEEA066C8E445CD25CC4B39257DC177DFC064308917AFAB85320CE2FBCAD62
50A8802217D978DA8918FDB487DFB4AD6AD58D4F7D222C61E2461FBBF930F2BC
6344F50E1D9A1D5320DDDBFFC24B63364446BAAE4FB155731CC3B2B1B5621A61
C9E21F37BAB3533B0425F7C8A6F3E3D57162CE9FEA1375A711267C53A907A56A
4B5DFB3C2DACE754107CD5770CD3E5E914B74ED370F65F3833ECA115D394DE82
88EE46D7EA7DF29D70216AB2C0961656904A5B69E7026706BD69427F7F347033
8028DF19EBCF095CCC24FFABE39DC244FD56B7F65AEA1A2C334040620506ED9C
A72AB357E9392F3B692533881FBE5C4FFCDAD22DFD9CDCE15B7A3D36C2A123CF
20B5BDE1521A5B5B8D91FB9E4409E905D13B11541063AB002B24BE51280B8BE7
5CFC714F49C949C8BFE34343EEE54FD4C5D9D1EEF236C5F1CF87ABC175F1AB73
3D5C91DC4685070B2C75AFFECE571A93885DDF1952D365E5C4C1AB05926C5857
1FBD2C0A6691A7C435199834681857B077C50AE1E97A74D589C5EAF49D5A9BD7
43C9078CA0AF343F62C3E8CC5F77A94FFA274CEC78C82D09E08141D9A925F542
5D92F97049995D47F4A4C49EE2A6717AEAF918721E3FDE51CD3DBC512C3FEE41
B85CE18E7C72010F7FBF896695EEAC624AB6029E134B9B71C02FAC5B37F753AA
00DB4A2D38D040D582C5383A236B0E21B17EBB5BA6C48E70A8765A6E3ECD796C
7295AD87138BE30E2D0E9B70C89CF566D0A8C55D89BF2B28E20247D089FA3C95
FE7788C5950ACF65B58D7067185824B3E6C4CEAD57F9B1C7DFDED3A7BDA14631
77E17B1924FAB7C0878DCF12F193AB078F8DF9B996430CBE622123DAB8547895
C1ACEE79831E83991FE9DC2041C9E02334E51AB09E64FABDAF5D3E28C18E1B40
8CAB61306382A0640AD4B683507B47EB5A1360806047C2F45A928FF0A385A1F5
1F31EC1D4ABE4526120B40A69C0F85F8F89CAC12FEB33B706CC51915380E0914
E01B290540EB2A0E57D3D61FF8A29ED4D64A43A97E786994D808373374E17549
02FEC2A4A3B26E2E2F98B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/KHTGTN+CMR10 findfont /Encoding get
dup 0 /.notdef put
pop
end
/KHTGTN+CMR10 findfont /Encoding get
dup 0 /.notdef put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 61 /equal put
pop
%%EndResource
[/N11/KHTGTN+CMR10 -1 TZ
%%BeginResource: font BGLHTN+CMSS10
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 13 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/FullName (CMSS10) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /BGLHTN+CMSS10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -61 -250 999 759 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81C6325A8F1E39454C5C5CD7DD32FFDCAA0C98A471D
864F21BA3C1B9AB1A487DF489FCED13A759AC6D527220B09E5C662269D43162B
1C47D4A5CBFB0633655E0B882B6CB0B8386CBC5142ED5E3581051D6952C2D60E
CC016F88AA5C2C88A02AD3E7621E87AFA4B88E9149CBFC744342E35BF29B4E2D
48E22FB32FF8C291AD36157A0297D94623E63D35E95502C7919BED4E2724B18E
905B5CF89CB8CF28DDFD2640A98DCAAE833C584FB115A1959635BB0995DDF5AA
BC3C904250D38AA12E3CEA01DDE0FBC7759245D6EF21C1C3A75B54C076A39FCF
18D76CCDDEEEA6F6C7745BAB4299E8E49C982E8AB4856FF568A45914ACA3C3C3
0E38A3DE226616314A87B5AF012CAF3D3D26A34D332B5C2B477AF342A3261B29
C1FE69340FB0C1CA4AD5E686BF31F2CB2C1E9D76745F2077136A8FA19201F741
42788F9B7E9B402B6E3BF62922D457C1429600DB5446B1219DD4663A467232A6
3CEAE8FEB19DF31A9784B5BA668FC00FAA444DB397834111E35AA17858D24E16
B5E130C955A0033F3ABA01B0CC7D74D3214044EA8B5AC51D5D50278E5A6B8FEF
13B4A253D6C320068D4CEE211A73AD830E08C95999DAC0922B7DF20EAE0345F2
C86699D49892250C82A55B23E7A1FFD858D3EC387974EA684F643F87B1CCFE0E
7F673FBE79189B264F2D0A03EF6F82169201BD353EEAC52472CFA0D0A18AB188
99A5AB372655660B285E98A0938C0F63CB792560F71CB63F6201A4EB6D1CBD73
E3A17EE86D4F76A29A7E737654AA7479A05526B98D178311092A57B09C6FD4BB
894256D720B87524094D5DA9A31C5D98F637D7303D5AF15D46092AEF128A75C7
AC15D77B1A271EB8BFDF36B4CD59238148DBF15B0F0E5E84C438BEEFF1F2B2EE
5417C67BDD3B75BE0C34333B6A3FDC628F2E33A4890733A8BC1D581B1358423F
F2EED4BCB1506899E6AE6728A556EDB245647E5706F4E1B290F762D72E4E34AF
A6AF2934A802AF94675F3EB7BD0EFAC941DF3AA8561020C881676B0B1CA1F10F
90CB1B74850EE1551406ABE3EDFA65EFC4F9786094C2AFDCE7A81FBEC8688D76
88F556E2EAC86C9B35D9D9E02256FDD8D1659468F4033DA62620A23FC2C87682
95BD4AB8EE7D107CED82FF488734655E367731C1FF1492EBE9DC69866A49F335
3269629FB702CE175325CFE901656AF822B8DA4D1EC8C8E6681A44126C8B89EF
BB718B3A0419140FE25DB8F608C049D10FC5B7B68E56BDB8DD2D8C53D1EE0A27
9DA53D49E72D73FFDA9169A2744D63EB977A1616FE076A4D467ABA0A044BF169
E874642DCB91FADD64C549B45C688E6FEEE3D69FCAC9A75885534A8B02FB2592
E12047BA817C90FF36E8E3C28920DA9EE6ADE43DE532D888F4D9AECA091D779A
A514B99EB78677A5E15EEAA7A888C23983165346DBE66D853EAE61FBF8CBD2EB
D2A4C70C4245DCC0B7A34620AD1A6162A536698655138D231B9AF375593E6D14
896E5256F9522012B8D9E7DEBA44EB9F27307BF743498ACB496036037907B642
DAF49492F60643D64848CEB92A6D486D8EC156C6CE4C5B650290BF5131C5AB9C
A35370418BDAB7F00EE15024513254D62D800FACD2592EC4207864FE47F9F1FD
40BC42F0BD87F88459DD7099A336A6856AD3087DA71517742D7BC508E01D29C4
89C2AE64A2620A1272D9AE1C26CB0115E4137DF36DE7388F607F9F935BEA8B52
AB1CA700B97493EBFA2FD2A990BA464E901114EE454A9007CAA5D4310E0589D7
4B004D0C6C41D484CD661C80DD0D4BA646A0D299CF324798739932A36E81E401
767C326ED42D3BE2CB076F64A194EDBDF45245EAEFB08D4EDCCABB8364F94CB5
301FB03EFB7A4865A2C2FA2F733B4C4463D87A866B3780E67FFA4E792545C88D
D1E7A8F7DCEEAAE16790D0E2FD684B4F0EB68CD4B0411B0FA3687639200DF47A
48DEB5BC7E792CF83EE4AB9DBC303CEB00AA66AC877DC275A62395F8C19B9918
1DE3D34C2105677D20185C9DF4CAF4A43437C1D6B03D419E0E9B312CD87CDC1B
25E1D8CCF4F6F4A945BD951233754C226514EC40A86803B79B908EA508A6AB17
87286B55749D50404CEE4F8FEE740ED5FF8AAC8121FAA92E379B9E645DD7267E
97A21F2115D89140454916AAF13A5097D370B9B49138A2FBF64C91F012342DF2
7D0B4ACF2EDB0362D76733D426099BD84DD8CA5468AC3ED46C9D29890026FF94
2C565F8FD6E1E3A2F9B2254BF429689A2EED75A43A50692C46E8EBB6736B2A46
7F9A8AE23BAC845E8D5D5E29EA26CF5E2DFCB96FC5E170975950743031D6B1CE
9B253CE041E7ED02FA4195567985D8559D188DBB3D3DAAF1CABC5800112C82AE
E2B306323A6DCC60466D3BBE72420B6215D5066AB58C9B4CC7A9110655C1153A
A6164199BA6F0A8F3E56442CB20EBCA25EFF6598E21A790E84E6CE3A56B4E8FF
72758E2199E54E0AB279E8B249BFCE89FE29C50F5C5309AE1A751185C4ECDDD2
1EE50EFB9AECD1DD0949776A9338E226D0A4971B865FAB102FCD1D00F71CD21E
62B69D1BDBD530844EB77EC24DC2BB06B4DF5978FE4816154533A2FB004F65AE
708BDDD8320C43F0292BC8EF95723D3617928295AB7EC98E6BFBE3970FB951A6
90B6F1D59EAF5ECAE271F4AF13CF87624C004A6E7A60E8EB162DD436DEC8870E
3C7F89D36D3A7D2CA1E42B1FC1E39FEFCA57389F8A0C3CAFBE4226626FAE8E97
50D2984244B79E508231EDF2AA75B9F3D29F19823DB217AB669EC739B61E184B
5F02A7D10F2F1AB58B1B597F7F3A5C738C6B660E82863F957C90F0E125AFB3E8
4BD45D11C7670DB947A8DD3E46948F801F316B1E30C6190F05199ABC86F55E34
6931AB76D2C55F3E19950503038047B42E61159CDF706867B137F2086BBB175B
7CE6DA8F73136D2A7AFBF649A244777E6EEEBAD2B8E72E62AB716236BF6BA667
03500F7843C5957CA11973F9B1266BA2498080D0D5BCFC41F4883B47CC34260B
166252D609F542DFEBF9EA690FB336B5820940A57D59D3D4932A5445E17B3E78
2B1517D1DA3A7564D66ADDABAE8A973E47F223260D7B32016D14868F0A6669E2
20DBF2ADFC67EE3E7221CC525167D150C31276B946876CA8293A8B11D9D6AEFF
4AA94D862180648078938890A17F9F9D949CB845B540ABD8BD9BE55911A80ECE
469A60A47BFA72B17E535DA72612AA73610095E9F6C121CADE1073EE85F6B41B
D0D64CE100DDA8586D106A4776B4C922D553CC4751DE397837115F9D7D9912A3
5B2E2446B818D7C4308C08A40EA667B36E1C3F8604538F8FC5B770D08789A5F0
C7C64A6F8D8C76151D7A7E4AB4D5DA99DD55E5B5F6309F2B1057E1FE2C21514A
2B99CAE021BC0092FB31C6616D4698CBCCCEEB7F2498AEB00E8DBA3D3D3E7FE9
5B8014EFA8267A9D7E3E2FD6C2C76636CB1C649F4D37C32D622C97379073626F
576374C5B112714CAFBEEF5DB69658A50D021A4AAEA8E823543D217A15E73DD8
84E1DF94BE6E30F062B4AA10ACE0A6BADCB9DEA6ADB97A54C7FA24510FDFABB2
82B3DBA9D4A8A0C5787FE985C4EA3B083718857BE47FAB651C67BF428C4357C0
2E049A4473C652576344E948A2B59BFEA70077BC89B99BD0A34425001A7BF124
265F8951E2D7D01F2EAFD82E1F80F8E03208515D7EDFB1356EF076B028883719
1323CAEECAC36408DC262C1C0C8516504C37B616110B71CE5C7F3110C8EEBE71
0E4E40E8F205B04B32BE7A47DE312408F3D004BCED15E475D18F2545BE3B9798
FFDB2AA4B7C904407721A5FF7791486C267482B3AF1F6C4F9290D071D0ABC485
675B0B822DA20C19ADC46A244CE9A525B66674C7F501FCFD61AA059C74CE9FFF
E4B9E7F4E4C344A203FA6F03406FDD1395141446026D1CB4BCAFBA9DC90D7971
EBA64FCC39BB88B75C0143E74E90E0025F1667F92A2EE3FA02FE9B11ED5A2C22
9F4BE806B4E1E82E14993AA0195985BC527A352E95C22A774E2A7A8F0D84D6A3
8DE330162209D93E2C8B4886681805EC1BDC4CEE42BF3112EB13ED19DD88A4D6
6120104E129E7453E88CA1C706968D2DA5FAAC4DFB975BC2269954CDD07E43F1
FEF688F7073F82B35B1E091B8E9F9516A6244800B09E84762A0513DBE08CC754
8DC06BF52F5D2D9CB03C8015A8407626A25A5166873F5DC76DE3085CA8254623
224510D436FBC4A84FE3AAA9B04E868FD1F27C625CC15B351CD3F46D4635BF3D
1F035E0A631F10F7E63D294349BB02C35DB1662B9F547B6A4CDB9A3F9B442A5C
88D3ACA00BCF2A42F9088C1328F05971850D17368E0DC21A528C6A311BD7DC41
5BCD1FDC7A7FAF033EB502114DC854B0ED789DAEAF468AD8E057BA50B1B16F17
5F37C14C34E6E43B4BA44037CCE06CDAED4F04D8CEE2CDD6A7056E01E7A740A5
623C43EA5ED1804B23D864FFB9C60CA62465EB57BEF19BC758035864F8529524
0FFED76C1F1CA241FEE7B87B087736E67B5D5B213FA05467872E31AA1D077863
6C84084881F263C0F44F9DEB64FA4F1E3786C1E95CE7542461614D63D36B629C
883A48C4C3519E9186285663024B2DB1B17E7F4D839EB05C8025A26D897B6AD9
25A5843BBE929C46C0BAB9A4E8A07B68F684D56217D59A3FE24C856D3B72C92B
04535EC9A3FE1372E0FABEE70BC265FA4B42B8E47D58
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/BGLHTN+CMSS10 findfont /Encoding get
dup 0 /.notdef put
pop
end
/BGLHTN+CMSS10 findfont /Encoding get
dup 0 /.notdef put
dup 12 /fi put
dup 19 /acute put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
pop
%%EndResource
[/N30/BGLHTN+CMSS10 -1 TZ
%%BeginResource: font JZJGTN+CMMI10
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 13 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/FullName (CMMI10) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /JZJGTN+CMMI10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -32 -250 1048 750 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3ECB48FA43E4
4BE895991CB9C373C80EADFE8BB0FE77BBE5D8323BD9F747D696811F9ACF96FC
D5E030F7E76EC0067CA05F844ABAB91222E3F6A227ECE22D2EA7C02B71DA2171
CAAA5270E53357FA407C66B2E4A26D78F0CE4D48C44684DD2DFEFD5FCE7BEE40
4D9A1364243D9B109B0CB67A65F0EA2D9DE80178F28197E87C556B40FF5269DF
7BF01C2BC217638423153490020E4905F2BAB6BA38544F9EF313E3CD41A266B4
E0F546BF5A0817756BDEC9CF202E474342FF3001597F6DFB917E77CC411CAF9F
C410175205A713F2946BBFA73F51F390173C682D7F2C64D8BDC9BB33338F42F4
6F67CAEFFFB77D3B1ABA8DEA9884E36D94A3628F612B81D6CE2E59AA6390C16F
2A9ADAD3C57FDF48FC5DDBED7D6E6F7E12784EB0AD4D44752157F0747DA0E3EB
AF3807A3E42DEC137ABA5C0F7DA6840A0F22C8B823A23A58842A77BAB34AD6A4
A5272AA4A7FB463D9BE7EFC47BF67789A404BB2AE4FA4E7B96CFC4F43D20AA3C
B35AD97ECEEBFBFBB73960E6E4829C8E6879E69A7EBA855A9BA5BD05C0A03513
3657AF10821BC4BBACFE3637FBA2817F221A79AA895D23D6DA5726B5B11796B1
618DF0AB72FF13C94CB8895D7E7D820C87EF4C979F6EC9A5CC82FD8711BF2FC2
710AA9E98ADD771FCEDF49D90F473FC68B827CF290BC35F041E954DAF58C421E
CEBC6C3006D37ACFF8D7E50E9DD09581945C52E83D43960055D4C9857CDB0688
B2CBC8B604783611843323B770F5EBA7E2C49623F5A9C46708A6B56CA097A518
709D23A55B6A9C7ECAC81B255D6BAD9723BBDA14D960F70275FCCA38CFA9144E
CEDAB59145C18F857B026766A321AE71B05C7A6D7E9A988DC38FCAADEFB3E78E
6B4DE57BA4611B5A2C8E8AA5C1A2EE077BC91904899CDE2A837A4563DAC104CE
A5F51F3E5C67226D483CD73EAFAFE16CE2F38D29CF8E48CE4CC719AF626708A5
70DAC93F4746B5A15E71075F31590A464C423491F0D450BC288268C4324DCE6A
AC8B40184A274143B1FD6F8A08AE5A0A697C9A49AFF0B00EA42D0FF23D7A6CEA
B33537E3547DA50154123B8C622CDCFF996EB863EF8D5A03C51602908C90AE6D
603DD3E456783C6848C578F678DA978321E9540E594851E2269FFDA91343980A
1F505D9BFABF162C5C7A3DE535BA11D1706F7BAC5D76F54578661B0AE1153810
781D8A9E087AC49B84FBCC3CAFC3A88E05EE6BAA96D8665B8E3BC23BABCFFC80
3DC9283642A4B0CB64B1785BEEDA27A07AD02D91C8F70461CA7986436F274BA7
054163570D0F76F082BBC69CD0911B77F9094C77E28C437B8A050C163D2CC558
1B607E607412764ADD996CA02554B5FDD1285BB22FAE1880181C95E1BAA4A437
FC6900E3E496F51CCD2FE1C0B3AE335918D4C89AF48E6074BA481EB4CA957D49
E4BBF714A2092BF40F2943E25A6FF3A1C5FEC12EB8082396267813C2A8850F57
6BCA18A7B2872617BCD51B892C3D9A45162CAC65F587F406615FB431A2AE4AD0
115ADA73EB27B99DABCEBF36B61B6D88173AC3C5F1E4DA0E75F97D89803DE325
0211997FA0EDC9A70307DF6826B3A6ED8798BA71506E0C32C5F7B44C9B9526E6
10B4B9BDEBAF1F752F965C0F08B9BA3E8225A917D96927F969768929D138EBB5
2F59E9556A9A7AE2A252AA9F2EBA2BEDF9887F16BCC3D13F6B3D69ED398B0741
1CE8EA966895F5CCC837C705F7C1FAEBF73683BD33965D8EA9650BFF67407003
44DC73AAA1091D83C4C060F4BBF63FDF90AA2CD96C90A93BD30C83F1974E6EC1
52BB87F9ACD392F6BBF5C29EE03AFF3BA22452BE9DA53329E5B6F3EFD30548D5
083F542DB1A8DFF5AE65661F99FE1027949D0DABFD5D16D939B971A705F798AD
08C875939AFA93C5336C628FF619F96E05EFD31AD48C9EA6B6A280C6F187B94B
5838F6E13B969CA96FB050CA4ABDA839A89167957D237346220C22B0430DB1D3
4AB2D8C8A6ED990C2F48AF7FA21072557479739E79AF72AD0A4D785E16C1B906
26E0E719670AF59B5E8805E923AD361C120674085CFA7F547092098E65936017
182B9C8354FE7E669620C4B9CBB09FB7D3DEA1D899CD519710AA51D185247897
01F48AD873384293728BA200E0751680BAD589DCA0E589F577BC174EE0D454B6
6AF7FEF2191F57039E25AC8FF9C9FE94CEC5F6816FA76039FAC19812FAFEF5EB
0D21FC8F1FB06D50622849EC8C9303158375BF4A02AB3ADC470A68446086EFBC
FEDF67A2EB29CF38011BFE381D95BC3E065870F08799D5E98F006DD5DDB7FCCF
DBBEBD64ED9570B14ADC3947CC669DD29B5138
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/JZJGTN+CMMI10 findfont /Encoding get
dup 0 /.notdef put
pop
end
/JZJGTN+CMMI10 findfont /Encoding get
dup 0 /.notdef put
dup 96 /lscript put
dup 99 /c put
dup 114 /r put
pop
%%EndResource
[/N28/JZJGTN+CMMI10 -1 TZ
%%BeginResource: font ADXHTN+CMSSBX10
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 13 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/FullName (CMSSBX10) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /ADXHTN+CMSSBX10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -71 -250 1099 780 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC8DC423323
00A152553EC9C9C51591C81C6325A8F1E39454C5C5CD7DD32FFDCAA0C98A471D
864F21BA3C1B9AB1A487DF489FCED13A759AC6D527220B09E5C662269D43162B
1C47D4A5CBFB0633655E0B882B6CB0B8386CBC5142ED5E3581051D6952C2D60E
CC016F88AA5C2C88A02AD3E7621E87AFA4B88E9149CBFC744342E35BF29B4E2D
48E22FB32FF8C291AD36157A0297D94623E63D35E95502C6EFCCE61A5B4C7844
F01BCCAE16E279DE643D13AE4BA93CBD49AE06669737A60B7D9E7E64ACC4A37B
D9FA59FE2CABA5B0CB49F0EF60213D5E71A33782E72E23DA67840E322DBA3CA3
215CF94FBA41E270963AD54B839F25FF1BAD5DA3DF7BE783F8754DDD5BEC7FEF
F086A45241E9F276DA884BC5A1E124AEDA0DD613EC833959518B18CB3EB358DC
D8AE4297F00635F7FAA4EAA245A8478F337AFF23767D3A9385A4A774D4ADF641
043B637428BD3F7407F9CFC9F125AD5FE2839B4C83C6F3D0E10CCDEC6E2F2547
B37634102033671F77CA52B8EECA28E1327438D6402C564A2CADE303DD899184
4380C2470D79B211821BDBF518BFDEE11D491B40080962A24114D86B30ED7CF1
18C76DC8F46E949192C3F392DD561D329CAD268F34DB5520E098C1625EF1E0BC
614ED5912D0E4DA459EE88D377DED65B8C6F7153B4BC35B21D995BC5E2EBD9C7
CAC479DE6546477416CD199F259648DBFF3CB4DADCFC12650C5257BD5F53DB0A
31951219EB1ADD7DBD5FC3D08DD99A260C8108140A766A36782606683B13D7BF
4D0EA34F1CE845DA866312E8C62956881FE8D5F8D91F7D02A403E446886A40AF
EBBFC242DBA19E76D54BE04B3EA84BA9E1B46A1215AC6A8FC082E803773FF8E1
B9730C8061D695ADDD3D1352CC41E1FD312F78522B732A4678AFF01ED665C491
8DBDB3A145491B177DEAEA4FC0A50EE94C43206784C66B8404D9F120D2CD3B8B
21DFB2776DFD5F65595C72A3B0AEF649BB2D14323D682B8CE4402813759F285B
6F5EE7A53BC57AA017BBEDA8DA6907E4E9D91CCB9DA6A657DEC6ABFA53DF54B5
401AAA71D60F1445AA767D338B10B5A074012D2AC90E2B04D7C24149A9298913
803ED864DC4191320629E70D9C4EA316287AAFCD882628CA9AA6BF01BF6B1813
12B03077BEB9332CEF09909A634830ED1026459C39E4CDE6068907EC9A2FCF76
DE65AA57F11FA6986CFBBDFDDF4D5EFA51CAADBC0A803EDE9AF35005F0C2EE9C
E0EAE63225C2A9C3FA0CFC085B2922672408B418B9A5B9A568FBBAAA0C8D655A
F599DBDDA04554D2F62946E3C1B6D3DA1A3FA6AD0594BD99330CF81652C5F0F8
3EC435632EFAD6285ABB9BB248364C3FE8E9415DA5F4B408FCBEE9A2B86EF3AF
53C5A159D0151A5F282643040D8C8DBD5F9008B4A790041E490895B0E12F584B
5A16A33092206CB51ADEEBB0912FA65E74071852602D970FEEEC4DB1F9DA0E92
68B4CF5DC65F5C11AC904AFC86F738427D4CC6F9A3B6BA673902EC65D15887E4
924DBDF15F4494EB6230E17E6D6D49BD614B32297F1142C6A9BA8CBB014CC43C
509F770526B5BD69187EABC85D5FDEA1A83C15A0BB2E4E8D56DB55A8D8CE73BF
EA9C27B5F921D04637C8D25021C0D5416620690C7C773CF9FDD5D501FAE017A2
6E285107EA22EB0F83A6510E9157ED9CA5F579197FEC95B353F3820C3266045D
33673A9F089CB4F2C2473E53038AE96724CB3B4AD7066CE8701740626C993E04
FFE9954C6A91791DE80588C4EE626C6D3DB07CB187C6765D983B812A0ACB2357
D8B362FE2BDC2971A228F0A003B54F7B1EC0AA46F18E7AA6B10BC7F9C00F04D0
0633B2611CF7DD9A085D9EC5323A149D29D23D0EBF6F648C1F7F058CFFF12194
A21EA2A942B69284F7B00B64B25CE0A73C4F48D4F765FDFA100EB35322FA1AC3
D757B0A57BCB55A08C462FCA9A6C1805167FBBB546856FC2F6827A3DF60F8206
B133CDF8400B13AE0D9DE81DB3766E26D658270DBEF4F5CEE350063AAF386130
31F89E0DCEA9AD441A5BDD54969ACB99EA3B3588A4229BB768745B5137F38B32
C248B2B2A3825DBD905EA0E6584B3B07D90924CCCFE094EF7287DCC7E0008DBA
35A2745CA213DD29FB62870886543BDACA868573EF862E8646120B439DFE2AC7
B11E554E05A61C25BE5DCC82E7DCF90DE45EA543E3046A6B1B27EA04552D988D
CE7A38032FFF0D60AD59D325E5B78080C57D328CBDA048F3895FE77ACFE156AC
9E7E5F89328A526CD70950779AB583105793784078B51218123B6F66C21DF139
EB56F5E90D8877D1D976F3FB5F0DEBC58295A0C55C4B323C798F7FCAF0FA3C00
37C8D78625373B252183C1CEF11E59D18D73E3DC77D51E8C4224F5338E330294
F76AC52EB6BE79F549B080BB85DA0484D97B8ABEFA02D902870FD461C494B3A9
992EE00AD05C84B8F0A07C8900FCEED57A47E63FE85AFA7C837A8519D3FD888E
83B9177D5D867726CDA0F2B6B999709493FB7375C2C89E414E4EA3FFF4E3F1E6
B8D0583416729E22A8536B9AEEC8A1AC3432D0077CF841E541AECA9ECD679794
B9BDBECBE1F32A30590E39080BD8605857FCDDAA3FE40B8C903651DC9A704456
5599413298DDCF39AEE27A6506309565D91D64BE1D4AD654F374F1B926938528
632D8081BB50250C4163BDDB7D6288AC5F8B37D25B87945F28A15CB7E52992DB
2F380D9894B52BA85B83C03D63FA673652F57534DE1F81BF3C74A51D467C616B
8D6CE1083F4745E2FF495753C3A7AE17B279C3D0B4C81C87C5B7945BC51C8EF6
A23AC9145B77AF905C4C00A54133DAA4401BA793796B4ED588091A61EFC85BE3
186813B14E8ABA3EA68F1B4D3001DE78EE154D8DF0EFF6EBFBC3B4CF57139148
E4BB659E086CC73E6CB82A69BAF9BCD2CBEFD4C493602236A70531251CDB3049
0D5E8338CA1F01A2B009F2830C37B268CD52E4B639F0A9585656028CC3907417
A926E05F41ED1B6F68DB91FCBF676B31A1F6B8F839E41A175741B4DB5FE0369E
1BE330D7B14B737F28A271605AA44DA64C01E9898840B3E7ED46FF65FE688155
F4F248BAEA8905B75F02E167FE4D46AF0F5DF32E99A3C971BDBCA6F93C85975A
660420A6ACED5EDF73C98EA09B91C2D5BC18BD6CA489662B5966BE2E74726C2D
24546B5184DE62B54D41784A9561CFF716A6B8A1A56DE6E7D4F13BE9CFE0C95E
7F1498492C39B9A16EEB5FB9524F603EBD5875F506779F8159C7471E9F7CF3D5
1BEA26C85FA52FEAF80444F11CEC6BF4F66501CBA5B8993F72554D9D390DD3D2
1537E670E7532607F3B01FEA5B4677460994F38B0D24C8DF065D5568B1833722
2B98CC51AC8F6859CA2981DB89D4C0E5DDB84E187D7F4636CFAD96DD846384F9
0347624A91BB8ACDE2B33C505396A65D4FA0F084A7811F4B6C5C90EABD6E7747
D2447BBAAB32C0453B7A0FD41558BE70AC28D6117B842383F637D93588358F3C
61D58D165BFC45A495E456AF215E08F51EFFC8CE89195FD7734D753822F9E63F
999040688A07FE4D7FAEB84558375508BD101D5CD14F53377BF5E6E76FDAB6DF
B983D55720CB6E8879D925F68710B1C460DBC7F7745E6C89EA84A4FB3E8F2641
6EDFCD8666BFE14B82C5995F5D5C9A1BD777AEDD8931F20841EF0E09B00778E3
650C0E26033B55848DA6ED0F534296DD28C9331DF5CB9694FEB5580215698CEF
D122CC759DB7FB1201A8A74D6991A852EB38143BD8E0E88D8F31BE5839F4E674
397A582A530E208107EB3B4D0EF7FBAFCBA1D772661200DF3908EE663C589B82
F88EB9DF6940FCF5FF94909C2A083F229C190DF48933D0B3772860913675252E
41DA670CCE1C209CA5BDC0845FC824B42A81740FE70A4F2A841591714E481104
8016AE16FFDD97AA3988BDDEC7DEABA828E034CCFDBF4EE454ACBF18A939338E
45E74DD5C13196E4465809E2B8C15191BDB1615F056FED71FD27A7D54F946B1C
69A5B529020A5EE100927D96240ED30EF935594FC3B46D43D8A3D6089DF071A9
CD2F71CC50F4715DF0A8EC037975D668932E42836CD205DB64E19EE7FD780C08
C4047F580D2585E1A883397EA0F511369BCD26C202D845934BF78BC6E28C0D9C
B968351E93C22B6F661C4A426BF722C1F7C9B5CBCD81C4056B0AFFF640EED5C5
F9B2A63704861B70C49478D589141C346785791FFF475A75C2561D2E8440C571
5CD2BC7E47AB6400F0DD236598057FF2B168F3BCE0D53B20B82FAD7CF3530B44
D4150AB3ED0B6A68A90538C317308679D40FA33AAC6F6571BC03935020573A81
25E4EAFD4F847B386DC8B96043059E2536F8154F1081DD730BC352D6603283A9
3105FB9E7428DD7AE677BE94669898820F6F2B89500E4A61E7DCA228C54BA2A7
8B82C5B55E928827091BB37E5389C65657459F508A4353D28F3F4A3EF693E416
5627B0F3BDB13FB0FAFE22E7A34815738B43AC58B30ECE6BD660328D3E65BF46
BD00AE1B9A7333BB12E434B6E093D0DDB2DC897432631CC845E051D31A96B410
2C66A98B77BB88CFA549F43DFB0B4376BDFC227791FC8C328ED4D7FF3579D430
BB4B9C882779A21FFDC2275FC057B0C991AEE5EDE736E28B2C003434A6D88E4D
4D58773D334C8061F51B09FA3FD6FDBE369038D47591923DF01D885478AD9522
C83AFD988C10C3654DC7ECA9CD71CA63812E0201C89C3E209A6CCFC49042CDE2
1A59A81B139B09904369CFE364DE7799DC0904A66F895E425213296DED493390
9B51A9290120A29AE3291D42B64415A36A70AAAD1B01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/ADXHTN+CMSSBX10 findfont /Encoding get
dup 0 /.notdef put
pop
end
/ADXHTN+CMSSBX10 findfont /Encoding get
dup 0 /.notdef put
dup 18 /grave put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
pop
%%EndResource
[/N24/ADXHTN+CMSSBX10 -1 TZ
151 509 280 248 re
W
n
q
0.119995 0 0 0.119995 0 0 cm
q
Q
q
n
1595.85 4455.28 m
1595.85 6108.82 l
3485.61 6108.82 l
3485.61 4455.28 l
h
W
n
n
1948.46 4953.56 m
1948.46 4960.43 1942.88 4966.01 1936.01 4966.01 c
1929.13 4966.01 1923.55 4960.43 1923.55 4953.56 c
1923.55 4946.68 1929.13 4941.1 1936.01 4941.1 c
1942.88 4941.1 1948.46 4946.68 1948.46 4953.56 c
[/DeviceGray] cs 0 sc
f
n
1910.66 4552.83 m
1910.66 4559.7 1905.09 4565.28 1898.21 4565.28 c
1891.33 4565.28 1885.76 4559.7 1885.76 4552.83 c
1885.76 4545.95 1891.33 4540.37 1898.21 4540.37 c
1905.09 4540.37 1910.66 4545.95 1910.66 4552.83 c
f
n
1872.87 4475.94 m
1872.87 4482.82 1867.29 4488.39 1860.42 4488.39 c
1853.54 4488.39 1847.96 4482.82 1847.96 4475.94 c
1847.96 4469.06 1853.54 4463.49 1860.42 4463.49 c
1867.29 4463.49 1872.87 4469.06 1872.87 4475.94 c
f
n
1835.07 4460.06 m
1835.07 4466.94 1829.5 4472.51 1822.62 4472.51 c
1815.74 4472.51 1810.17 4466.94 1810.17 4460.06 c
1810.17 4453.18 1815.74 4447.61 1822.62 4447.61 c
1829.5 4447.61 1835.07 4453.18 1835.07 4460.06 c
f
n
1797.28 4456.5 m
1797.28 4463.38 1791.7 4468.95 1784.83 4468.95 c
1777.95 4468.95 1772.37 4463.38 1772.37 4456.5 c
1772.37 4449.62 1777.95 4444.05 1784.83 4444.05 c
1791.7 4444.05 1797.28 4449.62 1797.28 4456.5 c
f
n
1759.48 4455.63 m
1759.48 4462.51 1753.91 4468.08 1747.03 4468.08 c
1740.15 4468.08 1734.58 4462.51 1734.58 4455.63 c
1734.58 4448.75 1740.15 4443.18 1747.03 4443.18 c
1753.91 4443.18 1759.48 4448.75 1759.48 4455.63 c
f
n
1721.69 4455.39 m
1721.69 4462.27 1716.11 4467.85 1709.24 4467.85 c
1702.36 4467.85 1696.78 4462.27 1696.78 4455.39 c
1696.78 4448.52 1702.36 4442.94 1709.24 4442.94 c
1716.11 4442.94 1721.69 4448.52 1721.69 4455.39 c
f
n
1683.89 4455.32 m
1683.89 4462.2 1678.32 4467.78 1671.44 4467.78 c
1664.56 4467.78 1658.99 4462.2 1658.99 4455.32 c
1658.99 4448.44 1664.56 4442.87 1671.44 4442.87 c
1678.32 4442.87 1683.89 4448.44 1683.89 4455.32 c
f
n
1646.1 4455.3 m
1646.1 4462.18 1640.52 4467.75 1633.64 4467.75 c
1626.77 4467.75 1621.19 4462.18 1621.19 4455.3 c
1621.19 4448.42 1626.77 4442.85 1633.64 4442.85 c
1640.52 4442.85 1646.1 4448.42 1646.1 4455.3 c
f
12.4533 w
1 J
1 j
n
1973.8 6811.55 m
1973.8 6811.55 l
1936.01 4953.56 l
1898.21 4552.83 l
1860.42 4475.94 l
1822.62 4460.06 l
1784.83 4456.5 l
1747.03 4455.63 l
1709.24 4455.39 l
1671.44 4455.32 l
1633.64 4455.3 l
S
Q
q
n
1595.85 4455.28 m
1595.85 6108.82 l
3485.61 6108.82 l
3485.61 4455.28 l
h
W
n
9.96265 w
1 J
1 j
n
3485.61 4945.99 m
3485.61 4945.99 l
3447.81 4917.13 l
3410.02 4889.42 l
3372.22 4862.84 l
3334.43 4837.37 l
3296.63 4812.98 l
3258.84 4789.65 l
3221.04 4767.36 l
3183.25 4746.09 l
3145.45 4725.8 l
3107.66 4706.48 l
3069.86 4688.1 l
3032.07 4670.64 l
2994.27 4654.07 l
2956.48 4638.38 l
2918.68 4623.54 l
2880.89 4609.52 l
2843.09 4596.3 l
2805.3 4583.86 l
2767.5 4572.17 l
2729.7 4561.21 l
2691.91 4550.96 l
2654.11 4541.4 l
2616.32 4532.49 l
2578.52 4524.22 l
2540.73 4516.56 l
2502.93 4509.49 l
2465.14 4502.99 l
2427.34 4497.03 l
2389.55 4491.59 l
2351.75 4486.64 l
2313.96 4482.16 l
2276.16 4478.13 l
2238.37 4474.53 l
2200.57 4471.32 l
2162.78 4468.49 l
2124.98 4466.02 l
2087.19 4463.88 l
2049.39 4462.04 l
2011.6 4460.48 l
1973.8 4459.19 l
1936.01 4458.13 l
1898.21 4457.28 l
1860.42 4456.62 l
1822.62 4456.12 l
1784.83 4455.77 l
1747.03 4455.53 l
1709.24 4455.39 l
1671.44 4455.32 l
1633.64 4455.3 l
[/DeviceGray] cs 0 sc
S
Q
q
n
1595 4454 1891.87 2.09961 re
[/DeviceGray] cs 0 sc
f
n
1595 4455 2.09985 41.5498 re
f
n
1670 4455 2.09985 20.7749 re
f
n
1746 4455 2.09985 20.7749 re
f
n
1822 4455 2.09985 20.7749 re
f
n
1897 4455 2.09985 20.7749 re
f
n
1973 4455 2.09985 41.5498 re
f
n
2048 4455 2.09985 20.7749 re
f
n
2124 4455 2.09985 20.7749 re
f
n
2200 4455 2.09985 20.7749 re
f
n
2275 4455 2.09985 20.7749 re
f
n
2351 4455 2.09985 41.5498 re
f
n
2426 4455 2.09985 20.7749 re
f
n
2502 4455 2.09985 20.7749 re
f
n
2577 4455 2.09985 20.7749 re
f
n
2653 4455 2.09985 20.7749 re
f
n
2729 4455 2.09985 41.5498 re
f
n
2804 4455 2.09985 20.7749 re
f
n
2880 4455 2.09985 20.7749 re
f
n
2955 4455 2.09985 20.7749 re
f
n
3031 4455 2.09985 20.7749 re
f
n
3107 4455 2.09985 41.5498 re
f
n
3182 4455 2.09985 20.7749 re
f
n
3258 4455 2.09985 20.7749 re
f
n
3333 4455 2.09985 20.7749 re
f
n
3409 4455 2.09985 20.7749 re
f
n
3485 4455 2.09985 41.5498 re
f
q
8.33333 0 0 8.33333 0 0 cm
189.009 525.669 m
/N11 9.96265 Tf
(0) show
231.87 525.669 m
(10)
[4.97129 4.97129 ] pdfxs
277.21 525.669 m
(20)
[4.97129 4.97129 ] pdfxs
322.55 525.669 m
(30)
[4.97129 4.97129 ] pdfxs
367.898 525.669 m
(40)
[4.97129 4.97129 ] pdfxs
413.238 525.669 m
(50)
[4.97129 4.97129 ] pdfxs
Q
n
1595 4454 2.09985 1651.5 re
f
n
1607 6104 6.2998 2.09961 re
f
n
1632 6104 6.2998 2.09961 re
f
n
1657 6104 6.2998 2.09961 re
f
n
1681 6104 6.2998 2.09961 re
f
n
1706 6104 6.2998 2.09961 re
f
n
1731 6104 6.2998 2.09961 re
f
n
1756 6104 6.2998 2.09961 re
f
n
1781 6104 6.2998 2.09961 re
f
n
1806 6104 6.2998 2.09961 re
f
n
1831 6104 6.2998 2.09961 re
f
n
1856 6104 6.2998 2.09961 re
f
n
1881 6104 6.2998 2.09961 re
f
n
1906 6104 6.2998 2.09961 re
f
n
1930 6104 6.2998 2.09961 re
f
n
1955 6104 6.2998 2.09961 re
f
n
1980 6104 6.2998 2.09961 re
f
n
2005 6104 6.2998 2.09961 re
f
n
2030 6104 6.2998 2.09961 re
f
n
2055 6104 6.2998 2.09961 re
f
n
2080 6104 6.2998 2.09961 re
f
n
2105 6104 6.2998 2.09961 re
f
n
2130 6104 6.2998 2.09961 re
f
n
2155 6104 6.2998 2.09961 re
f
n
2180 6104 6.2998 2.09961 re
f
n
2204 6104 6.2998 2.09961 re
f
n
2229 6104 6.2998 2.09961 re
f
n
2254 6104 6.2998 2.09961 re
f
n
2279 6104 6.2998 2.09961 re
f
n
2304 6104 6.2998 2.09961 re
f
n
2329 6104 6.2998 2.09961 re
f
n
2354 6104 6.2998 2.09961 re
f
n
2379 6104 6.2998 2.09961 re
f
n
2404 6104 6.2998 2.09961 re
f
n
2429 6104 6.2998 2.09961 re
f
n
2454 6104 6.2998 2.09961 re
f
n
2478 6104 6.2998 2.09961 re
f
n
2503 6104 6.2998 2.09961 re
f
n
2528 6104 6.2998 2.09961 re
f
n
2553 6104 6.2998 2.09961 re
f
n
2578 6104 6.2998 2.09961 re
f
n
2603 6104 6.2998 2.09961 re
f
n
2628 6104 6.2998 2.09961 re
f
n
2653 6104 6.2998 2.09961 re
f
n
2678 6104 6.2998 2.09961 re
f
n
2703 6104 6.2998 2.09961 re
f
n
2728 6104 6.2998 2.09961 re
f
n
2752 6104 6.2998 2.09961 re
f
n
2777 6104 6.2998 2.09961 re
f
n
2802 6104 6.2998 2.09961 re
f
n
2827 6104 6.2998 2.09961 re
f
n
2852 6104 6.2998 2.09961 re
f
n
2877 6104 6.2998 2.09961 re
f
n
2902 6104 6.2998 2.09961 re
f
n
2927 6104 6.2998 2.09961 re
f
n
2952 6104 6.2998 2.09961 re
f
n
2977 6104 6.2998 2.09961 re
f
n
3001 6104 6.2998 2.09961 re
f
n
3026 6104 6.2998 2.09961 re
f
n
3051 6104 6.2998 2.09961 re
f
n
3076 6104 6.2998 2.09961 re
f
n
3101 6104 6.2998 2.09961 re
f
n
3126 6104 6.2998 2.09961 re
f
n
3151 6104 6.2998 2.09961 re
f
n
3176 6104 6.2998 2.09961 re
f
n
3201 6104 6.2998 2.09961 re
f
n
3226 6104 6.2998 2.09961 re
f
n
3251 6104 6.2998 2.09961 re
f
n
3275 6104 6.2998 2.09961 re
f
n
3300 6104 6.2998 2.09961 re
f
n
3325 6104 6.2998 2.09961 re
f
n
3350 6104 6.2998 2.09961 re
f
n
3375 6104 6.2998 2.09961 re
f
n
3400 6104 6.2998 2.09961 re
f
n
3425 6104 6.2998 2.09961 re
f
n
3450 6104 6.2998 2.09961 re
f
n
1596 6045 24.9749 2.09961 re
f
n
1596 5986 24.9749 2.09961 re
f
n
1596 5927 24.9749 2.09961 re
f
n
1607 5868 6.2998 2.09961 re
f
n
1632 5868 6.2998 2.09961 re
f
n
1657 5868 6.2998 2.09961 re
f
n
1681 5868 6.2998 2.09961 re
f
n
1706 5868 6.2998 2.09961 re
f
n
1731 5868 6.2998 2.09961 re
f
n
1756 5868 6.2998 2.09961 re
f
n
1781 5868 6.2998 2.09961 re
f
n
1806 5868 6.2998 2.09961 re
f
n
1831 5868 6.2998 2.09961 re
f
n
1856 5868 6.2998 2.09961 re
f
n
1881 5868 6.2998 2.09961 re
f
n
1906 5868 6.2998 2.09961 re
f
n
1930 5868 6.2998 2.09961 re
f
n
1955 5868 6.2998 2.09961 re
f
n
1980 5868 6.2998 2.09961 re
f
n
2005 5868 6.2998 2.09961 re
f
n
2030 5868 6.2998 2.09961 re
f
n
2055 5868 6.2998 2.09961 re
f
n
2080 5868 6.2998 2.09961 re
f
n
2105 5868 6.2998 2.09961 re
f
n
2130 5868 6.2998 2.09961 re
f
n
2155 5868 6.2998 2.09961 re
f
n
2180 5868 6.2998 2.09961 re
f
n
2204 5868 6.2998 2.09961 re
f
n
2229 5868 6.2998 2.09961 re
f
n
2254 5868 6.2998 2.09961 re
f
n
2279 5868 6.2998 2.09961 re
f
n
2304 5868 6.2998 2.09961 re
f
n
2329 5868 6.2998 2.09961 re
f
n
2354 5868 6.2998 2.09961 re
f
n
2379 5868 6.2998 2.09961 re
f
n
2404 5868 6.2998 2.09961 re
f
n
2429 5868 6.2998 2.09961 re
f
n
2454 5868 6.2998 2.09961 re
f
n
2478 5868 6.2998 2.09961 re
f
n
2503 5868 6.2998 2.09961 re
f
n
2528 5868 6.2998 2.09961 re
f
n
2553 5868 6.2998 2.09961 re
f
n
2578 5868 6.2998 2.09961 re
f
n
2603 5868 6.2998 2.09961 re
f
n
2628 5868 6.2998 2.09961 re
f
n
2653 5868 6.2998 2.09961 re
f
n
2678 5868 6.2998 2.09961 re
f
n
2703 5868 6.2998 2.09961 re
f
n
2728 5868 6.2998 2.09961 re
f
n
2752 5868 6.2998 2.09961 re
f
n
2777 5868 6.2998 2.09961 re
f
n
2802 5868 6.2998 2.09961 re
f
n
2827 5868 6.2998 2.09961 re
f
n
2852 5868 6.2998 2.09961 re
f
n
2877 5868 6.2998 2.09961 re
f
n
2902 5868 6.2998 2.09961 re
f
n
2927 5868 6.2998 2.09961 re
f
n
2952 5868 6.2998 2.09961 re
f
n
2977 5868 6.2998 2.09961 re
f
n
3001 5868 6.2998 2.09961 re
f
n
3026 5868 6.2998 2.09961 re
f
n
3051 5868 6.2998 2.09961 re
f
n
3076 5868 6.2998 2.09961 re
f
n
3101 5868 6.2998 2.09961 re
f
n
3126 5868 6.2998 2.09961 re
f
n
3151 5868 6.2998 2.09961 re
f
n
3176 5868 6.2998 2.09961 re
f
n
3201 5868 6.2998 2.09961 re
f
n
3226 5868 6.2998 2.09961 re
f
n
3251 5868 6.2998 2.09961 re
f
n
3275 5868 6.2998 2.09961 re
f
n
3300 5868 6.2998 2.09961 re
f
n
3325 5868 6.2998 2.09961 re
f
n
3350 5868 6.2998 2.09961 re
f
n
3375 5868 6.2998 2.09961 re
f
n
3400 5868 6.2998 2.09961 re
f
n
3425 5868 6.2998 2.09961 re
f
n
3450 5868 6.2998 2.09961 re
f
n
1596 5809 24.9749 2.09961 re
f
n
1596 5750 24.9749 2.09961 re
f
n
1596 5691 24.9749 2.09961 re
f
n
1607 5632 6.2998 2.09961 re
f
n
1632 5632 6.2998 2.09961 re
f
n
1657 5632 6.2998 2.09961 re
f
n
1681 5632 6.2998 2.09961 re
f
n
1706 5632 6.2998 2.09961 re
f
n
1731 5632 6.2998 2.09961 re
f
n
1756 5632 6.2998 2.09961 re
f
n
1781 5632 6.2998 2.09961 re
f
n
1806 5632 6.2998 2.09961 re
f
n
1831 5632 6.2998 2.09961 re
f
n
1856 5632 6.2998 2.09961 re
f
n
1881 5632 6.2998 2.09961 re
f
n
1906 5632 6.2998 2.09961 re
f
n
1930 5632 6.2998 2.09961 re
f
n
1955 5632 6.2998 2.09961 re
f
n
1980 5632 6.2998 2.09961 re
f
n
2005 5632 6.2998 2.09961 re
f
n
2030 5632 6.2998 2.09961 re
f
n
2055 5632 6.2998 2.09961 re
f
n
2080 5632 6.2998 2.09961 re
f
n
2105 5632 6.2998 2.09961 re
f
n
2130 5632 6.2998 2.09961 re
f
n
2155 5632 6.2998 2.09961 re
f
n
2180 5632 6.2998 2.09961 re
f
n
2204 5632 6.2998 2.09961 re
f
n
2229 5632 6.2998 2.09961 re
f
n
2254 5632 6.2998 2.09961 re
f
n
2279 5632 6.2998 2.09961 re
f
n
2304 5632 6.2998 2.09961 re
f
n
2329 5632 6.2998 2.09961 re
f
n
2354 5632 6.2998 2.09961 re
f
n
2379 5632 6.2998 2.09961 re
f
n
2404 5632 6.2998 2.09961 re
f
n
2429 5632 6.2998 2.09961 re
f
n
2454 5632 6.2998 2.09961 re
f
n
2478 5632 6.2998 2.09961 re
f
n
2503 5632 6.2998 2.09961 re
f
n
2528 5632 6.2998 2.09961 re
f
n
2553 5632 6.2998 2.09961 re
f
n
2578 5632 6.2998 2.09961 re
f
n
2603 5632 6.2998 2.09961 re
f
n
2628 5632 6.2998 2.09961 re
f
n
2653 5632 6.2998 2.09961 re
f
n
2678 5632 6.2998 2.09961 re
f
n
2703 5632 6.2998 2.09961 re
f
n
2728 5632 6.2998 2.09961 re
f
n
2752 5632 6.2998 2.09961 re
f
n
2777 5632 6.2998 2.09961 re
f
n
2802 5632 6.2998 2.09961 re
f
n
2827 5632 6.2998 2.09961 re
f
n
2852 5632 6.2998 2.09961 re
f
n
2877 5632 6.2998 2.09961 re
f
n
2902 5632 6.2998 2.09961 re
f
n
2927 5632 6.2998 2.09961 re
f
n
2952 5632 6.2998 2.09961 re
f
n
2977 5632 6.2998 2.09961 re
f
n
3001 5632 6.2998 2.09961 re
f
n
3026 5632 6.2998 2.09961 re
f
n
3051 5632 6.2998 2.09961 re
f
n
3076 5632 6.2998 2.09961 re
f
n
3101 5632 6.2998 2.09961 re
f
n
3126 5632 6.2998 2.09961 re
f
n
3151 5632 6.2998 2.09961 re
f
n
3176 5632 6.2998 2.09961 re
f
n
3201 5632 6.2998 2.09961 re
f
n
3226 5632 6.2998 2.09961 re
f
n
3251 5632 6.2998 2.09961 re
f
n
3275 5632 6.2998 2.09961 re
f
n
3300 5632 6.2998 2.09961 re
f
n
3325 5632 6.2998 2.09961 re
f
n
3350 5632 6.2998 2.09961 re
f
n
3375 5632 6.2998 2.09961 re
f
n
3400 5632 6.2998 2.09961 re
f
n
3425 5632 6.2998 2.09961 re
f
n
3450 5632 6.2998 2.09961 re
f
n
1596 5573 24.9749 2.09961 re
f
n
1596 5515 24.9749 2.09961 re
f
n
1596 5456 24.9749 2.09961 re
f
n
1607 5397 6.2998 2.09961 re
f
n
1632 5397 6.2998 2.09961 re
f
n
1657 5397 6.2998 2.09961 re
f
n
1681 5397 6.2998 2.09961 re
f
n
1706 5397 6.2998 2.09961 re
f
n
1731 5397 6.2998 2.09961 re
f
n
1756 5397 6.2998 2.09961 re
f
n
1781 5397 6.2998 2.09961 re
f
n
1806 5397 6.2998 2.09961 re
f
n
1831 5397 6.2998 2.09961 re
f
n
1856 5397 6.2998 2.09961 re
f
n
1881 5397 6.2998 2.09961 re
f
n
1906 5397 6.2998 2.09961 re
f
n
1930 5397 6.2998 2.09961 re
f
n
1955 5397 6.2998 2.09961 re
f
n
1980 5397 6.2998 2.09961 re
f
n
2005 5397 6.2998 2.09961 re
f
n
2030 5397 6.2998 2.09961 re
f
n
2055 5397 6.2998 2.09961 re
f
n
2080 5397 6.2998 2.09961 re
f
n
2105 5397 6.2998 2.09961 re
f
n
2130 5397 6.2998 2.09961 re
f
n
2155 5397 6.2998 2.09961 re
f
n
2180 5397 6.2998 2.09961 re
f
n
2204 5397 6.2998 2.09961 re
f
n
2229 5397 6.2998 2.09961 re
f
n
2254 5397 6.2998 2.09961 re
f
n
2279 5397 6.2998 2.09961 re
f
n
2304 5397 6.2998 2.09961 re
f
n
2329 5397 6.2998 2.09961 re
f
n
2354 5397 6.2998 2.09961 re
f
n
2379 5397 6.2998 2.09961 re
f
n
2404 5397 6.2998 2.09961 re
f
n
2429 5397 6.2998 2.09961 re
f
n
2454 5397 6.2998 2.09961 re
f
n
2478 5397 6.2998 2.09961 re
f
n
2503 5397 6.2998 2.09961 re
f
n
2528 5397 6.2998 2.09961 re
f
n
2553 5397 6.2998 2.09961 re
f
n
2578 5397 6.2998 2.09961 re
f
n
2603 5397 6.2998 2.09961 re
f
n
2628 5397 6.2998 2.09961 re
f
n
2653 5397 6.2998 2.09961 re
f
n
2678 5397 6.2998 2.09961 re
f
n
2703 5397 6.2998 2.09961 re
f
n
2728 5397 6.2998 2.09961 re
f
n
2752 5397 6.2998 2.09961 re
f
n
2777 5397 6.2998 2.09961 re
f
n
2802 5397 6.2998 2.09961 re
f
n
2827 5397 6.2998 2.09961 re
f
n
2852 5397 6.2998 2.09961 re
f
n
2877 5397 6.2998 2.09961 re
f
n
2902 5397 6.2998 2.09961 re
f
n
2927 5397 6.2998 2.09961 re
f
n
2952 5397 6.2998 2.09961 re
f
n
2977 5397 6.2998 2.09961 re
f
n
3001 5397 6.2998 2.09961 re
f
n
3026 5397 6.2998 2.09961 re
f
n
3051 5397 6.2998 2.09961 re
f
n
3076 5397 6.2998 2.09961 re
f
n
3101 5397 6.2998 2.09961 re
f
n
3126 5397 6.2998 2.09961 re
f
n
3151 5397 6.2998 2.09961 re
f
n
3176 5397 6.2998 2.09961 re
f
n
3201 5397 6.2998 2.09961 re
f
n
3226 5397 6.2998 2.09961 re
f
n
3251 5397 6.2998 2.09961 re
f
n
3275 5397 6.2998 2.09961 re
f
n
3300 5397 6.2998 2.09961 re
f
n
3325 5397 6.2998 2.09961 re
f
n
3350 5397 6.2998 2.09961 re
f
n
3375 5397 6.2998 2.09961 re
f
n
3400 5397 6.2998 2.09961 re
f
n
3425 5397 6.2998 2.09961 re
f
n
3450 5397 6.2998 2.09961 re
f
n
1596 5338 24.9749 2.09961 re
f
n
1596 5279 24.9749 2.09961 re
f
n
1596 5220 24.9749 2.09961 re
f
n
1607 5161 6.2998 2.09961 re
f
n
1632 5161 6.2998 2.09961 re
f
n
1657 5161 6.2998 2.09961 re
f
n
1681 5161 6.2998 2.09961 re
f
n
1706 5161 6.2998 2.09961 re
f
n
1731 5161 6.2998 2.09961 re
f
n
1756 5161 6.2998 2.09961 re
f
n
1781 5161 6.2998 2.09961 re
f
n
1806 5161 6.2998 2.09961 re
f
n
1831 5161 6.2998 2.09961 re
f
n
1856 5161 6.2998 2.09961 re
f
n
1881 5161 6.2998 2.09961 re
f
n
1906 5161 6.2998 2.09961 re
f
n
1930 5161 6.2998 2.09961 re
f
n
1955 5161 6.2998 2.09961 re
f
n
1980 5161 6.2998 2.09961 re
f
n
2005 5161 6.2998 2.09961 re
f
n
2030 5161 6.2998 2.09961 re
f
n
2055 5161 6.2998 2.09961 re
f
n
2080 5161 6.2998 2.09961 re
f
n
2105 5161 6.2998 2.09961 re
f
n
2130 5161 6.2998 2.09961 re
f
n
2155 5161 6.2998 2.09961 re
f
n
2180 5161 6.2998 2.09961 re
f
n
2204 5161 6.2998 2.09961 re
f
n
2229 5161 6.2998 2.09961 re
f
n
2254 5161 6.2998 2.09961 re
f
n
2279 5161 6.2998 2.09961 re
f
n
2304 5161 6.2998 2.09961 re
f
n
2329 5161 6.2998 2.09961 re
f
n
2354 5161 6.2998 2.09961 re
f
n
2379 5161 6.2998 2.09961 re
f
n
2404 5161 6.2998 2.09961 re
f
n
2429 5161 6.2998 2.09961 re
f
n
2454 5161 6.2998 2.09961 re
f
n
2478 5161 6.2998 2.09961 re
f
n
2503 5161 6.2998 2.09961 re
f
n
2528 5161 6.2998 2.09961 re
f
n
2553 5161 6.2998 2.09961 re
f
n
2578 5161 6.2998 2.09961 re
f
n
2603 5161 6.2998 2.09961 re
f
n
2628 5161 6.2998 2.09961 re
f
n
2653 5161 6.2998 2.09961 re
f
n
2678 5161 6.2998 2.09961 re
f
n
2703 5161 6.2998 2.09961 re
f
n
2728 5161 6.2998 2.09961 re
f
n
2752 5161 6.2998 2.09961 re
f
n
2777 5161 6.2998 2.09961 re
f
n
2802 5161 6.2998 2.09961 re
f
n
2827 5161 6.2998 2.09961 re
f
n
2852 5161 6.2998 2.09961 re
f
n
2877 5161 6.2998 2.09961 re
f
n
2902 5161 6.2998 2.09961 re
f
n
2927 5161 6.2998 2.09961 re
f
n
2952 5161 6.2998 2.09961 re
f
n
2977 5161 6.2998 2.09961 re
f
n
3001 5161 6.2998 2.09961 re
f
n
3026 5161 6.2998 2.09961 re
f
n
3051 5161 6.2998 2.09961 re
f
n
3076 5161 6.2998 2.09961 re
f
n
3101 5161 6.2998 2.09961 re
f
n
3126 5161 6.2998 2.09961 re
f
n
3151 5161 6.2998 2.09961 re
f
n
3176 5161 6.2998 2.09961 re
f
n
3201 5161 6.2998 2.09961 re
f
n
3226 5161 6.2998 2.09961 re
f
n
3251 5161 6.2998 2.09961 re
f
n
3275 5161 6.2998 2.09961 re
f
n
3300 5161 6.2998 2.09961 re
f
n
3325 5161 6.2998 2.09961 re
f
n
3350 5161 6.2998 2.09961 re
f
n
3375 5161 6.2998 2.09961 re
f
n
3400 5161 6.2998 2.09961 re
f
n
3425 5161 6.2998 2.09961 re
f
n
3450 5161 6.2998 2.09961 re
f
n
1596 5102 24.9749 2.09961 re
f
n
1596 5043 24.9749 2.09961 re
f
n
1596 4984 24.9749 2.09961 re
f
n
1607 4925 6.2998 2.09961 re
f
n
1632 4925 6.2998 2.09961 re
f
n
1657 4925 6.2998 2.09961 re
f
n
1681 4925 6.2998 2.09961 re
f
n
1706 4925 6.2998 2.09961 re
f
n
1731 4925 6.2998 2.09961 re
f
n
1756 4925 6.2998 2.09961 re
f
n
1781 4925 6.2998 2.09961 re
f
n
1806 4925 6.2998 2.09961 re
f
n
1831 4925 6.2998 2.09961 re
f
n
1856 4925 6.2998 2.09961 re
f
n
1881 4925 6.2998 2.09961 re
f
n
1906 4925 6.2998 2.09961 re
f
n
1930 4925 6.2998 2.09961 re
f
n
1955 4925 6.2998 2.09961 re
f
n
1980 4925 6.2998 2.09961 re
f
n
2005 4925 6.2998 2.09961 re
f
n
2030 4925 6.2998 2.09961 re
f
n
2055 4925 6.2998 2.09961 re
f
n
2080 4925 6.2998 2.09961 re
f
n
2105 4925 6.2998 2.09961 re
f
n
2130 4925 6.2998 2.09961 re
f
n
2155 4925 6.2998 2.09961 re
f
n
2180 4925 6.2998 2.09961 re
f
n
2204 4925 6.2998 2.09961 re
f
n
2229 4925 6.2998 2.09961 re
f
n
2254 4925 6.2998 2.09961 re
f
n
2279 4925 6.2998 2.09961 re
f
n
2304 4925 6.2998 2.09961 re
f
n
2329 4925 6.2998 2.09961 re
f
n
2354 4925 6.2998 2.09961 re
f
n
2379 4925 6.2998 2.09961 re
f
n
2404 4925 6.2998 2.09961 re
f
n
2429 4925 6.2998 2.09961 re
f
n
2454 4925 6.2998 2.09961 re
f
n
2478 4925 6.2998 2.09961 re
f
n
2503 4925 6.2998 2.09961 re
f
n
2528 4925 6.2998 2.09961 re
f
n
2553 4925 6.2998 2.09961 re
f
n
2578 4925 6.2998 2.09961 re
f
n
2603 4925 6.2998 2.09961 re
f
n
2628 4925 6.2998 2.09961 re
f
n
2653 4925 6.2998 2.09961 re
f
n
2678 4925 6.2998 2.09961 re
f
n
2703 4925 6.2998 2.09961 re
f
n
2728 4925 6.2998 2.09961 re
f
n
2752 4925 6.2998 2.09961 re
f
n
2777 4925 6.2998 2.09961 re
f
n
2802 4925 6.2998 2.09961 re
f
n
2827 4925 6.2998 2.09961 re
f
n
2852 4925 6.2998 2.09961 re
f
n
2877 4925 6.2998 2.09961 re
f
n
2902 4925 6.2998 2.09961 re
f
n
2927 4925 6.2998 2.09961 re
f
n
2952 4925 6.2998 2.09961 re
f
n
2977 4925 6.2998 2.09961 re
f
n
3001 4925 6.2998 2.09961 re
f
n
3026 4925 6.2998 2.09961 re
f
n
3051 4925 6.2998 2.09961 re
f
n
3076 4925 6.2998 2.09961 re
f
n
3101 4925 6.2998 2.09961 re
f
n
3126 4925 6.2998 2.09961 re
f
n
3151 4925 6.2998 2.09961 re
f
n
3176 4925 6.2998 2.09961 re
f
n
3201 4925 6.2998 2.09961 re
f
n
3226 4925 6.2998 2.09961 re
f
n
3251 4925 6.2998 2.09961 re
f
n
3275 4925 6.2998 2.09961 re
f
n
3300 4925 6.2998 2.09961 re
f
n
3325 4925 6.2998 2.09961 re
f
n
3350 4925 6.2998 2.09961 re
f
n
3375 4925 6.2998 2.09961 re
f
n
3400 4925 6.2998 2.09961 re
f
n
3425 4925 6.2998 2.09961 re
f
n
3450 4925 6.2998 2.09961 re
f
n
1596 4867 24.9749 2.09961 re
f
n
1596 4808 24.9749 2.09961 re
f
n
1596 4749 24.9749 2.09961 re
f
n
1607 4690 6.2998 2.09961 re
f
n
1632 4690 6.2998 2.09961 re
f
n
1657 4690 6.2998 2.09961 re
f
n
1681 4690 6.2998 2.09961 re
f
n
1706 4690 6.2998 2.09961 re
f
n
1731 4690 6.2998 2.09961 re
f
n
1756 4690 6.2998 2.09961 re
f
n
1781 4690 6.2998 2.09961 re
f
n
1806 4690 6.2998 2.09961 re
f
n
1831 4690 6.2998 2.09961 re
f
n
1856 4690 6.2998 2.09961 re
f
n
1881 4690 6.2998 2.09961 re
f
n
1906 4690 6.2998 2.09961 re
f
n
1930 4690 6.2998 2.09961 re
f
n
1955 4690 6.2998 2.09961 re
f
n
1980 4690 6.2998 2.09961 re
f
n
2005 4690 6.2998 2.09961 re
f
n
2030 4690 6.2998 2.09961 re
f
n
2055 4690 6.2998 2.09961 re
f
n
2080 4690 6.2998 2.09961 re
f
n
2105 4690 6.2998 2.09961 re
f
n
2130 4690 6.2998 2.09961 re
f
n
2155 4690 6.2998 2.09961 re
f
n
2180 4690 6.2998 2.09961 re
f
n
2204 4690 6.2998 2.09961 re
f
n
2229 4690 6.2998 2.09961 re
f
n
2254 4690 6.2998 2.09961 re
f
n
2279 4690 6.2998 2.09961 re
f
n
2304 4690 6.2998 2.09961 re
f
n
2329 4690 6.2998 2.09961 re
f
n
2354 4690 6.2998 2.09961 re
f
n
2379 4690 6.2998 2.09961 re
f
n
2404 4690 6.2998 2.09961 re
f
n
2429 4690 6.2998 2.09961 re
f
n
2454 4690 6.2998 2.09961 re
f
n
2478 4690 6.2998 2.09961 re
f
n
2503 4690 6.2998 2.09961 re
f
n
2528 4690 6.2998 2.09961 re
f
n
2553 4690 6.2998 2.09961 re
f
n
2578 4690 6.2998 2.09961 re
f
n
2603 4690 6.2998 2.09961 re
f
n
2628 4690 6.2998 2.09961 re
f
n
2653 4690 6.2998 2.09961 re
f
n
2678 4690 6.2998 2.09961 re
f
n
2703 4690 6.2998 2.09961 re
f
n
2728 4690 6.2998 2.09961 re
f
n
2752 4690 6.2998 2.09961 re
f
n
2777 4690 6.2998 2.09961 re
f
n
2802 4690 6.2998 2.09961 re
f
n
2827 4690 6.2998 2.09961 re
f
n
2852 4690 6.2998 2.09961 re
f
n
2877 4690 6.2998 2.09961 re
f
n
2902 4690 6.2998 2.09961 re
f
n
2927 4690 6.2998 2.09961 re
f
n
2952 4690 6.2998 2.09961 re
f
n
2977 4690 6.2998 2.09961 re
f
n
3001 4690 6.2998 2.09961 re
f
n
3026 4690 6.2998 2.09961 re
f
n
3051 4690 6.2998 2.09961 re
f
n
3076 4690 6.2998 2.09961 re
f
n
3101 4690 6.2998 2.09961 re
f
n
3126 4690 6.2998 2.09961 re
f
n
3151 4690 6.2998 2.09961 re
f
n
3176 4690 6.2998 2.09961 re
f
n
3201 4690 6.2998 2.09961 re
f
n
3226 4690 6.2998 2.09961 re
f
n
3251 4690 6.2998 2.09961 re
f
n
3275 4690 6.2998 2.09961 re
f
n
3300 4690 6.2998 2.09961 re
f
n
3325 4690 6.2998 2.09961 re
f
n
3350 4690 6.2998 2.09961 re
f
n
3375 4690 6.2998 2.09961 re
f
n
3400 4690 6.2998 2.09961 re
f
n
3425 4690 6.2998 2.09961 re
f
n
3450 4690 6.2998 2.09961 re
f
n
1596 4631 24.9749 2.09961 re
f
n
1596 4572 24.9749 2.09961 re
f
n
1596 4513 24.9749 2.09961 re
f
n
1607 4454 6.2998 2.09961 re
f
n
1632 4454 6.2998 2.09961 re
f
n
1657 4454 6.2998 2.09961 re
f
n
1681 4454 6.2998 2.09961 re
f
n
1706 4454 6.2998 2.09961 re
f
n
1731 4454 6.2998 2.09961 re
f
n
1756 4454 6.2998 2.09961 re
f
n
1781 4454 6.2998 2.09961 re
f
n
1806 4454 6.2998 2.09961 re
f
n
1831 4454 6.2998 2.09961 re
f
n
1856 4454 6.2998 2.09961 re
f
n
1881 4454 6.2998 2.09961 re
f
n
1906 4454 6.2998 2.09961 re
f
n
1930 4454 6.2998 2.09961 re
f
n
1955 4454 6.2998 2.09961 re
f
n
1980 4454 6.2998 2.09961 re
f
n
2005 4454 6.2998 2.09961 re
f
n
2030 4454 6.2998 2.09961 re
f
n
2055 4454 6.2998 2.09961 re
f
n
2080 4454 6.2998 2.09961 re
f
n
2105 4454 6.2998 2.09961 re
f
n
2130 4454 6.2998 2.09961 re
f
n
2155 4454 6.2998 2.09961 re
f
n
2180 4454 6.2998 2.09961 re
f
n
2204 4454 6.2998 2.09961 re
f
n
2229 4454 6.2998 2.09961 re
f
n
2254 4454 6.2998 2.09961 re
f
n
2279 4454 6.2998 2.09961 re
f
n
2304 4454 6.2998 2.09961 re
f
n
2329 4454 6.2998 2.09961 re
f
n
2354 4454 6.2998 2.09961 re
f
n
2379 4454 6.2998 2.09961 re
f
n
2404 4454 6.2998 2.09961 re
f
n
2429 4454 6.2998 2.09961 re
f
n
2454 4454 6.2998 2.09961 re
f
n
2478 4454 6.2998 2.09961 re
f
n
2503 4454 6.2998 2.09961 re
f
n
2528 4454 6.2998 2.09961 re
f
n
2553 4454 6.2998 2.09961 re
f
n
2578 4454 6.2998 2.09961 re
f
n
2603 4454 6.2998 2.09961 re
f
n
2628 4454 6.2998 2.09961 re
f
n
2653 4454 6.2998 2.09961 re
f
n
2678 4454 6.2998 2.09961 re
f
n
2703 4454 6.2998 2.09961 re
f
n
2728 4454 6.2998 2.09961 re
f
n
2752 4454 6.2998 2.09961 re
f
n
2777 4454 6.2998 2.09961 re
f
n
2802 4454 6.2998 2.09961 re
f
n
2827 4454 6.2998 2.09961 re
f
n
2852 4454 6.2998 2.09961 re
f
n
2877 4454 6.2998 2.09961 re
f
n
2902 4454 6.2998 2.09961 re
f
n
2927 4454 6.2998 2.09961 re
f
n
2952 4454 6.2998 2.09961 re
f
n
2977 4454 6.2998 2.09961 re
f
n
3001 4454 6.2998 2.09961 re
f
n
3026 4454 6.2998 2.09961 re
f
n
3051 4454 6.2998 2.09961 re
f
n
3076 4454 6.2998 2.09961 re
f
n
3101 4454 6.2998 2.09961 re
f
n
3126 4454 6.2998 2.09961 re
f
n
3151 4454 6.2998 2.09961 re
f
n
3176 4454 6.2998 2.09961 re
f
n
3201 4454 6.2998 2.09961 re
f
n
3226 4454 6.2998 2.09961 re
f
n
3251 4454 6.2998 2.09961 re
f
n
3275 4454 6.2998 2.09961 re
f
n
3300 4454 6.2998 2.09961 re
f
n
3325 4454 6.2998 2.09961 re
f
n
3350 4454 6.2998 2.09961 re
f
n
3375 4454 6.2998 2.09961 re
f
n
3400 4454 6.2998 2.09961 re
f
n
3425 4454 6.2998 2.09961 re
f
n
3450 4454 6.2998 2.09961 re
f
q
8.33333 0 0 8.33333 0 0 cm
160.614 729.402 m
/N11 9.96265 Tf
(70000)
[4.97129 4.97129 4.97129 4.97129 4.97129 ] pdfxs
160.614 701.115 m
(60000)
[4.97129 4.97129 4.97129 4.97129 4.97129 ] pdfxs
160.614 672.819 m
(50000)
[4.97129 4.97129 4.97129 4.97129 4.97129 ] pdfxs
160.614 644.532 m
(40000)
[4.97129 4.97129 4.97129 4.97129 4.97129 ] pdfxs
160.614 616.245 m
(30000)
[4.97129 4.97129 4.97129 4.97129 4.97129 ] pdfxs
160.614 587.949 m
(20000)
[4.97129 4.97129 4.97129 4.97129 4.97129 ] pdfxs
160.614 559.662 m
(10000)
[4.97129 4.97129 4.97129 4.97129 4.97129 ] pdfxs
180.54 531.366 m
(0) show
Q
n
3485 4454 2.09985 1651.5 re
f
n
3461 6045 24.9749 2.09961 re
f
n
3461 5986 24.9749 2.09961 re
f
n
3461 5927 24.9749 2.09961 re
f
n
3461 5809 24.9749 2.09961 re
f
n
3461 5750 24.9749 2.09961 re
f
n
3461 5691 24.9749 2.09961 re
f
n
3461 5573 24.9749 2.09961 re
f
n
3461 5515 24.9749 2.09961 re
f
n
3461 5456 24.9749 2.09961 re
f
n
3461 5338 24.9749 2.09961 re
f
n
3461 5279 24.9749 2.09961 re
f
n
3461 5220 24.9749 2.09961 re
f
n
3461 5102 24.9749 2.09961 re
f
n
3461 5043 24.9749 2.09961 re
f
n
3461 4984 24.9749 2.09961 re
f
n
3461 4867 24.9749 2.09961 re
f
n
3461 4808 24.9749 2.09961 re
f
n
3461 4749 24.9749 2.09961 re
f
n
3461 4631 24.9749 2.09961 re
f
n
3461 4572 24.9749 2.09961 re
f
n
3461 4513 24.9749 2.09961 re
f
q
8.33333 0 0 8.33333 0 0 cm
265.221 514.455 m
/N30 9.96265 Tf
(nomb)
[5.14064 4.97129 7.91025 5.14064 ] pdfxs
288.114 514.455 m
(re)
[3.39714 4.42327 ] pdfxs
299.238 514.455 m
/N28 9.96265 Tf
(c) show
306.854 514.455 m
/N30 9.96265 Tf
(de)
[5.14064 4.42327 ] pdfxs
319.73 514.455 m
(p) show
324.6 514.455 m
(ro\fls)
[3.39714 4.97129 5.3299 2.37102 3.81565 ] pdfxs
151.731 746.115 m
(pa)
[5.14064 4.78203 ] pdfxs
161.384 746.115 m
(r)
[3.39714 ] pdfxs
(t) show
(i)
[2.37102 ] pdfxs
(t) show
(ions)
[2.37102 4.97129 5.14064 3.81565 ] pdfxs
193.92 746.115 m
(explo)
[4.42327 4.58273 5.14064 2.37102 4.97129 ] pdfxs
215.14 746.115 m
(r) show
218.258 746.115 m
(\023) show
218.531 746.115 m
(ees)
[4.42327 4.42327 3.81565 ] pdfxs
245.925 695.175 m
/N24 9.96265 Tf
(e) show
(xhausti)
[4.97129 5.57906 5.2203 5.57906 4.19417 4.01495 2.54037 ] pdfxs
(f) show
353.043 599.037 m
(pas)
[5.57906 5.2203 4.19417 ] pdfxs
371.556 599.037 m
(\022) show
371.681 599.037 m
(a) show
380.546 599.037 m
(pas)
[5.57906 5.2203 4.19417 ] pdfxs
Q
Q
Q
/JZJGTN+CMMI10 /Font _pdfUndefineResource
/N28 /Font _pdfUndefineResource
/BGLHTN+CMSS10 /Font _pdfUndefineResource
/N30 /Font _pdfUndefineResource
/ADXHTN+CMSSBX10 /Font _pdfUndefineResource
/N24 /Font _pdfUndefineResource
/KHTGTN+CMR10 /Font _pdfUndefineResource
/N11 /Font _pdfUndefineResource
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%EOF
